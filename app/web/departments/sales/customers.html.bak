<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Customers - Bhoomi TechZone HRMS</title>
    <style>
        /* Root Variables */
        :root {
            --primary: #2563eb;
            --secondary: #10b981;
            --danger: #ef4444;
            --success: #10b981;
            --warning: #f59e0b;
            --info: #3b82f6;
            
            --bg-light: #f9fafb;
            --bg-dark: #111827;
            --bg-card: #ffffff;
            
            --text-primary: #111827;
            --text-secondary: #6b7280;
            --text-light: #f9fafb;
            --text-muted: #9ca3af;
            
            --border-color: #e5e7eb;
            --border-radius: 0.5rem;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: var(--bg-light);
            color: var(--text-primary);
            line-height: 1.5;
        }
        
        /* Layout Styles */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background-color: white;
            border-right: 1px solid var(--border-color);
            position: fixed;
            height: 100vh;
            z-index: 100;
            transition: all 0.3s ease;
        }
        
        .main-content {
            flex: 1;
            margin-left: 250px;
            transition: all 0.3s ease;
        }
        
        .sidebar-hidden .main-content {
            margin-left: 0;
        }
        
        /* Header & Navigation Styles */
        .sidebar-header {
            padding: 1.5rem;
            display: flex;
            align-items: center;
            border-bottom: 1px solid var(--border-color);
        }
        
        .company-logo {
            display: flex;
            align-items: center;
        }
        
        .company-logo svg {
            margin-right: 0.75rem;
        }
        
        .company-name {
            font-weight: 600;
            font-size: 1.25rem;
        }
        
        .nav-list {
            list-style: none;
            padding: 1rem 0;
        }
        
        .nav-item {
            padding: 0.25rem 1.5rem;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            border-radius: var(--border-radius);
            color: var(--text-secondary);
            text-decoration: none;
            transition: all 0.2s ease;
        }
        
        .nav-link:hover {
            background-color: var(--bg-light);
        }
        
        .nav-link.active {
            background-color: rgba(37, 99, 235, 0.1);
            color: var(--primary);
            font-weight: 500;
        }
        
        .nav-link i {
            margin-right: 0.75rem;
            width: 20px;
            text-align: center;
        }
        
        .sidebar-footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--border-color);
        }
        
        .top-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            background-color: white;
            border-bottom: 1px solid var(--border-color);
        }
        
        .menu-toggle {
            background: none;
            border: none;
            cursor: pointer;
            display: none;
        }
        
        .user-menu {
            display: flex;
            align-items: center;
            cursor: pointer;
            position: relative;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 500;
            margin-right: 0.5rem;
        }
        
        .user-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            margin-top: 0.5rem;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 200px;
            z-index: 100;
            display: none;
        }
        
        .user-dropdown.active {
            display: block;
        }
        
        .dropdown-item {
            padding: 0.75rem 1rem;
            color: var(--text-secondary);
            text-decoration: none;
            display: flex;
            align-items: center;
            transition: background-color 0.2s ease;
        }
        
        .dropdown-item:hover {
            background-color: var(--bg-light);
        }
        
        .dropdown-item i {
            margin-right: 0.5rem;
        }
        
        .dropdown-divider {
            height: 1px;
            background-color: var(--border-color);
            margin: 0.5rem 0;
        }
        
        /* Page Styles */
        .page-main {
            padding: 2rem;
        }
        
        .page-header {
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
            gap: 1rem;
        }
        
        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }
        
        .page-subtitle {
            color: var(--text-secondary);
            font-size: 1.125rem;
        }
        
        /* Controls */
        .controls-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            gap: 1rem;
            flex-wrap: wrap;
        }
        
        .filters {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }
        
        .filter-select {
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            background: white;
            color: var(--text-primary);
            font-size: 0.875rem;
        }
        
        .search-box {
            display: flex;
            align-items: center;
            background: white;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            padding: 0.5rem 1rem;
            min-width: 300px;
        }
        
        .search-input {
            border: none;
            outline: none;
            flex: 1;
            padding: 0.25rem;
            font-size: 0.875rem;
        }
        
        /* Button Styles */
        .btn {
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
        }
        
        .btn:hover {
            background-color: #1d4ed8;
        }
        
        .btn-secondary {
            background-color: var(--text-secondary);
        }
        
        .btn-secondary:hover {
            background-color: #4b5563;
        }
        
        .btn-success {
            background-color: var(--success);
        }
        
        .btn-success:hover {
            background-color: #059669;
        }
        
        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.75rem;
        }
        
        /* Customers Grid */
        .customers-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .customer-card {
            background: white;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.2s ease;
            position: relative;
        }
        
        .customer-card:hover {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }
        
        .customer-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 1rem;
        }
        
        .customer-info {
            flex: 1;
        }
        
        .customer-name {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 0.25rem;
        }
        
        .customer-company {
            color: var(--text-secondary);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }
        
        .customer-contact {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }
        
        .customer-status {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 500;
            text-transform: capitalize;
        }
        
        .status-active {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success);
        }
        
        .status-inactive {
            background: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }
        
        .customer-details {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--border-color);
        }
        
        .customer-value {
            font-weight: 600;
            color: var(--primary);
        }
        
        .customer-date {
            color: var(--text-secondary);
            font-size: 0.75rem;
        }
        
        .customer-actions {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
        }
        
        /* Loading States */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 3rem;
            color: var(--text-secondary);
        }
        
        .spinner {
            border: 2px solid var(--border-color);
            border-top: 2px solid var(--primary);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            margin-right: 0.5rem;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Toast animation */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            
            .main-content {
                margin-left: 0;
            }
            
            .menu-toggle {
                display: block;
            }
            
            .sidebar.active {
                transform: translateX(0);
            }
            
            .customers-grid {
                grid-template-columns: 1fr;
            }
            
            .controls-bar {
                flex-direction: column;
                align-items: stretch;
            }
            
            .search-box {
                min-width: auto;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container" id="dashboardContainer">
        <aside class="sidebar">
            <div class="sidebar-header">
                <div class="company-logo">
                    <svg width="32" height="32" viewBox="0 0 32 32">
                        <rect width="32" height="32" rx="8" fill="#2563eb"/>
                        <path d="M16 4L28 16L16 28L4 16L16 4Z" fill="#2563eb" />
                        <path d="M16 10L22 16L16 22L10 16L16 10Z" fill="#1d4ed8" />
                    </svg>
                    <div class="company-name">Bhoomi TechZone</div>
                </div>
            </div>
            
            <nav class="sidebar-nav">
                <ul class="nav-list">
                    <li class="nav-item">
                        <a href="/app/sales/dashboard" class="nav-link">
                            <i>📊</i>
                            Dashboard
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a href="/app/sales/attendance" class="nav-link">
                            <i>🕒</i>
                            Attendance
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a href="/app/sales/leads" class="nav-link">
                            <i>🎯</i>
                            Leads
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a href="/app/sales/customers" class="nav-link">
                            <i>🧑🏼‍🤝‍🧑🏻</i>
                            Customers
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a href="/app/sales/reports" class="nav-link">
                            <i>🚨</i>
                            Reports
                        </a>
                    </li>
                    
                    <li class="nav-item">
                        <a href="/app/sales/profile" class="nav-link active">
                            <i>👤</i>
                            Profile
                        </a>
                    </li>
                </ul>
            </nav>
            
            <div class="sidebar-footer">
                <div class="user-info">
                    <div id="sidebar-username" style="font-weight: 500;">User</div>
                    <div id="sidebar-position" style="color: var(--text-secondary); font-size: 0.875rem;">Sales</div>
                </div>
            </div>
        </aside>
        
        <div class="main-content">
            <header class="top-header">
                <div class="left-section">
                    <button class="menu-toggle" id="menuToggle">
                        <span>☰</span>
                    </button>
                    <h1 class="page-title">Sales Customers</h1>
                </div>
                
                <div class="user-menu" id="userMenu">
                    <div class="user-avatar" id="userInitials">U</div>
                    <span id="userTimeDisplay">00:00 - User</span>
                    
                    <div class="user-dropdown" id="userDropdown">
                        <a href="/static/profile.html" class="dropdown-item">
                            <i>👤</i> Your Profile
                        </a>
                        
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item" id="logoutBtn">
                            <i>🚪</i> Log Out
                        </a>
                    </div>
                </div>
            </header>
            
            <main class="page-main">
                <div class="page-header">
                    <div>
                        <h1 class="page-title">Sales Customers</h1>
                        <p class="page-subtitle">Manage your converted customers and ongoing relationships</p>
                    </div>
                    <button class="btn" id="addCustomerBtn">
                        <span>➕</span>
                        Add Customer
                    </button>
                </div>
                
                <div class="controls-bar">
                    <div class="filters">
                        <select class="filter-select" id="statusFilter">
                            <option value="">All Statuses</option>
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                    
                    <div style="display: flex; gap: 1rem; align-items: center;">
                        <div class="search-box">
                            <input type="text" class="search-input" id="searchInput" placeholder="Search customers by name, company, phone...">
                            <span>🔍</span>
                        </div>
                        
                        <button class="btn btn-secondary" id="refreshBtn">
                            <span>🔄</span>
                            Refresh
                        </button>
                    </div>
                </div>
                
                <div id="customersContainer">
                    <div class="loading">
                        <div class="spinner"></div>
                        Loading customers...
                    </div>
                </div>
            </main>
        </div>
    </div>
    
    <!-- Include scripts -->
    <script src="/static/js/api.js"></script>
    <script src="/static/js/role-aware.js"></script>
    
    <script>
        // Global variables - currentUser is declared in api.js
        let allCustomers = [];
        let filteredCustomers = [];
        let isLoading = false;
        
        document.addEventListener('DOMContentLoaded', async function() {
            // Check authentication
            const token = localStorage.getItem('bhoomitechzone_token');
            if (!token) {
                window.location.href = '/static/login.html';
                return;
            }
            
            // Initialize page
            await initializePage();
            
            // Setup event listeners
            setupEventListeners();
            
            // Load customers
            await loadCustomers();
        });
        
        async function initializePage() {
            try {
                // Load current user
                await loadCurrentUser();
                
                // Initialize navigation
                initializeNavigation();
                
                console.log('Page initialized successfully');
            } catch (error) {
                console.error('Error initializing page:', error);
                showToast('Error loading page', 'error');
            }
        }
        
        async function loadCurrentUser() {
            try {
                const token = localStorage.getItem('bhoomitechzone_token');
                const response = await fetch('/users/me', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                
                if (response.ok) {
                    currentUser = await response.json();
                    updateUserInfo(currentUser);
                } else {
                    throw new Error('Failed to load user data');
                }
            } catch (error) {
                console.error('Error loading user:', error);
                window.location.href = '/static/login.html';
            }
        }
        
        function initializeNavigation() {
            // Simple navigation for sales department
            const navList = document.getElementById('navList');
            const navigationItems = [
                { href: '/static/departments/sales/dashboard.html', text: '📊 Dashboard', active: false },
                { href: '/static/departments/sales/leads.html', text: '🎯 Leads', active: false },
                { href: '/static/departments/sales/customers.html', text: '👥 Customers', active: true },
                { href: '/static/departments/sales/reports.html', text: '📈 Reports', active: false }
            ];
            
            navList.innerHTML = navigationItems.map(item => `
                <li class="nav-item">
                    <a href="${item.href}" class="nav-link ${item.active ? 'active' : ''}">
                        ${item.text}
                    </a>
                </li>
            `).join('');
        }
        
        function setupEventListeners() {
            // Menu toggle
            document.getElementById('menuToggle')?.addEventListener('click', function() {
                document.querySelector('.sidebar')?.classList.toggle('active');
            });
            
            // User menu
            const userMenu = document.getElementById('userMenu');
            const userDropdown = document.getElementById('userDropdown');
            
            userMenu?.addEventListener('click', function(e) {
                e.stopPropagation();
                userDropdown?.classList.toggle('active');
            });
            
            document.addEventListener('click', function() {
                userDropdown?.classList.remove('active');
            });
            
            // Logout
            document.getElementById('logoutBtn')?.addEventListener('click', function(e) {
                e.preventDefault();
                localStorage.removeItem('bhoomitechzone_token');
                window.location.href = '/static/login.html';
            });
            
            // Filters and search
            document.getElementById('statusFilter').addEventListener('change', filterCustomers);
            document.getElementById('searchInput').addEventListener('input', filterCustomers);
            
            // Buttons
            document.getElementById('refreshBtn').addEventListener('click', () => loadCustomers());
            document.getElementById('addCustomerBtn').addEventListener('click', openAddCustomerModal);
            
            // Add customer form
            document.getElementById('addCustomerForm').addEventListener('submit', handleAddCustomer);
        }
        
        async function loadCustomers() {
            if (isLoading) return;
            
            isLoading = true;
            document.getElementById('customersContainer').innerHTML = `
                <div class="loading">
                    <div class="spinner"></div>
                    Loading customers...
                </div>
            `;
            
            try {
                const token = localStorage.getItem('bhoomitechzone_token');
                const response = await fetch('/api/sales/customers', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                
                if (response.ok) {
                    allCustomers = await response.json();
                    console.log('Loaded customers:', allCustomers.length);
                    filteredCustomers = [...allCustomers];
                    renderCustomers();
                } else {
                    throw new Error('Failed to load customers');
                }
            } catch (error) {
                console.error('Error loading customers:', error);
                document.getElementById('customersContainer').innerHTML = `
                    <div style="text-align: center; padding: 3rem; color: var(--text-secondary);">
                        <p>Error loading customers. Please try again.</p>
                        <button class="btn" onclick="loadCustomers()">Retry</button>
                    </div>
                `;
                showToast('Error loading customers', 'error');
            } finally {
                isLoading = false;
            }
        }
        
        function filterCustomers() {
            const statusFilter = document.getElementById('statusFilter').value;
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            
            filteredCustomers = allCustomers.filter(customer => {
                // Status filter
                if (statusFilter && customer.status !== statusFilter) return false;
                
                // Search filter
                if (searchTerm) {
                    const searchableText = [
                        customer.contact_person,
                        customer.company_name,
                        customer.phone_number,
                        customer.email
                    ].join(' ').toLowerCase();
                    
                    if (!searchableText.includes(searchTerm)) return false;
                }
                
                return true;
            });
            
            renderCustomers();
        }
        
        function renderCustomers() {
            const container = document.getElementById('customersContainer');
            
            if (filteredCustomers.length === 0) {
                container.innerHTML = `
                    <div style="text-align: center; padding: 3rem; color: var(--text-secondary);">
                        <h3>No customers found</h3>
                        <p>Customers are automatically created when leads are closed as won.</p>
                        <a href="/static/departments/sales/leads.html" class="btn">View Leads</a>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = `
                <div class="customers-grid">
                    ${filteredCustomers.map(customer => createCustomerCard(customer)).join('')}
                </div>
            `;
        }
        
        function createCustomerCard(customer) {
            const statusClass = `status-${customer.status || 'active'}`;
            const customerValue = customer.customer_value ? formatCurrency(customer.customer_value) : 'Not specified';
            const createdDate = new Date(customer.created_at).toLocaleDateString();
            
            return `
                <div class="customer-card" onclick="openCustomerDetails('${customer._id}')">
                    <div class="customer-header">
                        <div class="customer-info">
                            <div class="customer-name">${customer.contact_person}</div>
                            ${customer.company_name ? `<div class="customer-company">${customer.company_name}</div>` : ''}
                            <div class="customer-contact">📞 ${customer.phone_number}</div>
                            ${customer.email ? `<div class="customer-contact">✉️ ${customer.email}</div>` : ''}
                        </div>
                        <div class="customer-status ${statusClass}">
                            ${formatStatus(customer.status || 'active')}
                        </div>
                    </div>
                    
                    <div class="customer-details">
                        <div class="customer-value">${customerValue}</div>
                        <div class="customer-date">${createdDate}</div>
                    </div>
                    
                    <div class="customer-actions" onclick="event.stopPropagation()">
                        <button class="btn btn-sm" onclick="viewCustomerProjects('${customer._id}')">Projects</button>
                        <button class="btn btn-sm btn-success" onclick="contactCustomer('${customer._id}')">Contact</button>
                    </div>
                </div>
            `;
        }
        
        function openCustomerDetails(customerId) {
            const customer = allCustomers.find(c => c._id === customerId);
            if (!customer) return;
            
            document.getElementById('customerDetailsTitle').textContent = `${customer.contact_person || 'Customer'} Details`;
            
            const detailsHtml = `
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Contact Person:</span>
                    <span class="customer-detail-value">${customer.contact_person || 'N/A'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Company:</span>
                    <span class="customer-detail-value">${customer.company_name || 'N/A'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Phone:</span>
                    <span class="customer-detail-value">${customer.phone || 'N/A'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Email:</span>
                    <span class="customer-detail-value">${customer.email || 'N/A'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Customer Value:</span>
                    <span class="customer-detail-value">${customer.customer_value ? formatCurrency(customer.customer_value) : 'Not specified'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Status:</span>
                    <span class="customer-detail-value">${formatStatus(customer.status || 'active')}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Assigned To:</span>
                    <span class="customer-detail-value">${customer.assigned_to || 'N/A'}</span>
                </div>
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Created:</span>
                    <span class="customer-detail-value">${customer.created_at ? new Date(customer.created_at).toLocaleDateString() : 'N/A'}</span>
                </div>
                ${customer.notes ? `
                <div class="customer-detail-item">
                    <span class="customer-detail-label">Notes:</span>
                    <span class="customer-detail-value">${customer.notes}</span>
                </div>
                ` : ''}
            `;
            
            document.getElementById('customerDetailsBody').innerHTML = detailsHtml;
            document.getElementById('customerDetailsModal').style.display = 'block';
        }

        async function viewCustomerProjects(customerId) {
            const customer = allCustomers.find(c => c._id === customerId);
            if (!customer) return;
            
            document.getElementById('projectsModalTitle').textContent = `Projects for ${customer.contact_person}`;
            document.getElementById('projectsModalBody').innerHTML = `
                <div class="loading">
                    <div class="spinner"></div>
                    Loading projects...
                </div>
            `;
            document.getElementById('projectsModal').style.display = 'block';
            
            try {
                const token = localStorage.getItem('bhoomitechzone_token');
                const response = await fetch('/api/sales/projects', {
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                
                if (response.ok) {
                    const projects = await response.json();
                    const customerProjects = projects.filter(p => p.customer_id === customerId);
                    
                    if (customerProjects.length === 0) {
                        document.getElementById('projectsModalBody').innerHTML = `
                            <div style="text-align: center; padding: 2rem; color: var(--text-secondary);">
                                <span style="font-size: 3rem;">📁</span>
                                <p>No projects found for this customer</p>
                            </div>
                        `;
                    } else {
                        const projectsHtml = customerProjects.map(project => `
                            <div class="project-item">
                                <div class="project-header">
                                    <div class="project-name">${project.name || project.project_name || 'Unnamed Project'}</div>
                                    <div class="project-status ${project.status || 'active'}">${formatStatus(project.status || 'active')}</div>
                                </div>
                                <div class="project-details">
                                    <p><strong>Client:</strong> ${project.client || project.client_name || 'Not specified'}</p>
                                    <p><strong>Budget:</strong> ${project.budget ? formatCurrency(project.budget) : project.project_value ? formatCurrency(project.project_value) : 'Not specified'}</p>
                                    <p><strong>Start Date:</strong> ${project.start_date ? new Date(project.start_date).toLocaleDateString() : 'Not set'}</p>
                                    <p><strong>End Date:</strong> ${project.end_date || project.due_date ? new Date(project.end_date || project.due_date).toLocaleDateString() : 'Not set'}</p>
                                    ${project.description || project.requirements ? `<p><strong>Description:</strong> ${project.description || project.requirements}</p>` : ''}
                                    ${project.technologies && project.technologies.length > 0 ? `<p><strong>Technologies:</strong> ${project.technologies.join(', ')}</p>` : ''}
                                </div>
                            </div>
                        `).join('');
                        
                        document.getElementById('projectsModalBody').innerHTML = projectsHtml;
                    }
                } else {
                    throw new Error('Failed to load projects');
                }
            } catch (error) {
                console.error('Error loading projects:', error);
                document.getElementById('projectsModalBody').innerHTML = `
                    <div style="text-align: center; padding: 2rem; color: var(--danger);">
                        <span style="font-size: 3rem;">❌</span>
                        <p>Error loading projects</p>
                        <button class="btn btn-sm" onclick="viewCustomerProjects('${customerId}')">Retry</button>
                    </div>
                `;
            }
        }
        
        function contactCustomer(customerId) {
            const customer = allCustomers.find(c => c._id === customerId);
            if (!customer) return;
            
            showToast(`Contacting ${customer.contact_person}`, 'info');
            // TODO: Implement contact functionality
        }

        // Modal functions
        function openAddCustomerModal() {
            document.getElementById('addCustomerModal').style.display = 'block';
        }

        function closeAddCustomerModal() {
            document.getElementById('addCustomerModal').style.display = 'none';
            document.getElementById('addCustomerForm').reset();
        }

        function closeCustomerDetailsModal() {
            document.getElementById('customerDetailsModal').style.display = 'none';
        }

        function closeProjectsModal() {
            document.getElementById('projectsModal').style.display = 'none';
        }

        async function handleAddCustomer(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const customerData = {
                company_name: formData.get('company_name'),
                contact_person: formData.get('contact_person'),
                phone: formData.get('phone'),
                email: formData.get('email') || '',
                customer_value: parseFloat(formData.get('customer_value')) || 0,
                status: formData.get('status') || 'active',
                notes: formData.get('notes') || ''
            };

            try {
                const token = localStorage.getItem('bhoomitechzone_token');
                const response = await fetch('/api/sales/customers', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(customerData)
                });

                if (response.ok) {
                    const newCustomer = await response.json();
                    showToast('Customer added successfully!', 'success');
                    closeAddCustomerModal();
                    await loadCustomers(); // Reload customers list
                } else {
                    const error = await response.json();
                    throw new Error(error.detail || 'Failed to add customer');
                }
            } catch (error) {
                console.error('Error adding customer:', error);
                showToast(error.message || 'Failed to add customer', 'error');
            }
        }

        // Close modals when clicking outside
        window.addEventListener('click', function(event) {
            const modals = ['customerDetailsModal', 'addCustomerModal', 'projectsModal'];
            modals.forEach(modalId => {
                const modal = document.getElementById(modalId);
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        });
        
        // Utility functions
        function updateUserInfo(userData) {
            const initials = getInitials(userData.first_name, userData.last_name, userData.username);
            document.getElementById('userInitials').textContent = initials;
            
            const currentTime = new Date().toLocaleTimeString('en-US', { 
                hour12: false, 
                hour: '2-digit', 
                minute: '2-digit' 
            });
            document.getElementById('userTimeDisplay').textContent = `${currentTime} - ${userData.username}`;
            document.getElementById('sidebar-username').textContent = userData.username;
            document.getElementById('sidebar-position').textContent = userData.position || 'Sales';
        }
        
        function getInitials(firstName, lastName, username) {
            if (firstName && lastName) {
                return (firstName[0] + lastName[0]).toUpperCase();
            } else if (firstName) {
                return firstName[0].toUpperCase();
            } else if (username) {
                return username[0].toUpperCase();
            }
            return 'U';
        }
        
        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                style: 'currency',
                currency: 'INR',
                minimumFractionDigits: 0
            }).format(amount);
        }
        
        function formatStatus(status) {
            return status.charAt(0).toUpperCase() + status.slice(1).replace('_', ' ');
        }
        
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 1rem 1.5rem;
                background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6'};
                color: white;
                border-radius: 0.5rem;
                z-index: 10000;
                animation: fadeIn 0.3s ease;
            `;
            toast.textContent = message;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    </script>

    <!-- Customer Details Modal -->
    <div id="customerDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="customerDetailsTitle">Customer Details</h2>
                <span class="close" onclick="closeCustomerDetailsModal()">&times;</span>
            </div>
            <div class="modal-body" id="customerDetailsBody">
                <!-- Customer details will be populated here -->
            </div>
        </div>
    </div>

    <!-- Add Customer Modal -->
    <div id="addCustomerModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add New Customer</h2>
                <span class="close" onclick="closeAddCustomerModal()">&times;</span>
            </div>
            <div class="modal-body">
                <form id="addCustomerForm">
                    <div class="form-group">
                        <label for="customerCompanyName">Company Name *</label>
                        <input type="text" id="customerCompanyName" name="company_name" required>
                    </div>
                    <div class="form-group">
                        <label for="customerContactPerson">Contact Person *</label>
                        <input type="text" id="customerContactPerson" name="contact_person" required>
                    </div>
                    <div class="form-group">
                        <label for="customerPhone">Phone Number *</label>
                        <input type="tel" id="customerPhone" name="phone" required>
                    </div>
                    <div class="form-group">
                        <label for="customerEmail">Email</label>
                        <input type="email" id="customerEmail" name="email">
                    </div>
                    <div class="form-group">
                        <label for="customerValue">Customer Value</label>
                        <input type="number" id="customerValue" name="customer_value" min="0" step="0.01">
                    </div>
                    <div class="form-group">
                        <label for="customerStatus">Status</label>
                        <select id="customerStatus" name="status">
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="customerNotes">Notes</label>
                        <textarea id="customerNotes" name="notes" rows="3"></textarea>
                    </div>
                    <div class="form-actions">
                        <button type="button" class="btn btn-secondary" onclick="closeAddCustomerModal()">Cancel</button>
                        <button type="submit" class="btn">Add Customer</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Projects Modal -->
    <div id="projectsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="projectsModalTitle">Customer Projects</h2>
                <span class="close" onclick="closeProjectsModal()">&times;</span>
            </div>
            <div class="modal-body" id="projectsModalBody">
                <!-- Projects will be populated here -->
            </div>
        </div>
    </div>

    <style>
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            border-radius: var(--border-radius);
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h2 {
            margin: 0;
            font-size: 1.5rem;
        }

        .close {
            font-size: 2rem;
            font-weight: bold;
            cursor: pointer;
            color: var(--text-secondary);
        }

        .close:hover {
            color: var(--text-primary);
        }

        .modal-body {
            padding: 1.5rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--text-primary);
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 0.875rem;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
        }

        .customer-detail-item {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .customer-detail-item:last-child {
            border-bottom: none;
        }

        .customer-detail-label {
            font-weight: 500;
            color: var(--text-secondary);
        }

        .customer-detail-value {
            color: var(--text-primary);
            text-align: right;
        }

        .project-item {
            padding: 1rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            margin-bottom: 1rem;
        }

        .project-item:last-child {
            margin-bottom: 0;
        }

        .project-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 0.5rem;
        }

        .project-name {
            font-weight: 600;
            color: var(--text-primary);
        }

        .project-status {
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            font-size: 0.75rem;
            font-weight: 500;
            background-color: var(--bg-light);
            color: var(--text-secondary);
        }

        .project-status.planning {
            background-color: #fef3c7;
            color: #92400e;
        }

        .project-status.in-progress {
            background-color: #dbeafe;
            color: #1e40af;
        }

        .project-status.completed {
            background-color: #d1fae5;
            color: #065f46;
        }

        .project-details {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }
    </style>

</body>
</html>
